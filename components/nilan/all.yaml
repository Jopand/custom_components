packages:
  remote_package:
    url: https://github.com/Jopand/esphome_components
    ref: split_into_separate_files
    files:
      - components/nilan/basic.yaml
      - components/nilan/input/0.yaml
      - components/nilan/input/1.yaml
      - components/nilan/input/100.yaml
      - components/nilan/input/103.yaml
      - components/nilan/input/107.yaml
      - components/nilan/input/200.yaml
      - components/nilan/input/210.yaml
      - components/nilan/input/215.yaml
      - components/nilan/input/222.yaml
      - components/nilan/input/400.yaml
      - components/nilan/input/401.yaml
      - components/nilan/input/402.yaml
      - components/nilan/input/403.yaml
      - components/nilan/input/404.yaml
      - components/nilan/input/405.yaml
      - components/nilan/input/406.yaml
      - components/nilan/input/407.yaml
      - components/nilan/input/408.yaml
      - components/nilan/input/409.yaml
      - components/nilan/input/1000.yaml
      - components/nilan/input/1003.yaml
      - components/nilan/input/1200.yaml
      - components/nilan/input/1201.yaml
      - components/nilan/input/1202.yaml
      - components/nilan/input/1203.yaml
      - components/nilan/input/1205.yaml
      - components/nilan/input/1206.yaml
    refresh: 0s
  
  basic_yaml: !include basic.yaml

  0_input: !include input/0.yaml
  1_input: !include input/1.yaml
  100_input: !include input/100.yaml
  103_input: !include input/103.yaml
  107_input: !include input/107.yaml
  200_input: !include input/200.yaml
  210_input: !include input/210.yaml
  215_input: !include input/215.yaml
  222_input: !include input/222.yaml
  400_input: !include input/400.yaml
  401_input: !include input/401.yaml
  402_input: !include input/402.yaml
  403_input: !include input/403.yaml
  404_input: !include input/404.yaml
  405_input: !include input/405.yaml
  406_input: !include input/406.yaml
  407_input: !include input/407.yaml
  408_input: !include input/408.yaml
  409_input: !include input/409.yaml
  1000_input: !include input/1000.yaml
  1003_input: !include input/1003.yaml
  1200_input: !include input/1200.yaml
  1201_input: !include input/1201.yaml
  1202_input: !include input/1202.yaml
  1203_input: !include input/1203.yaml
  1205_input: !include input/1205.yaml
  1206_input: !include input/1206.yaml

  123_holding: !include holding/123.yaml
  125_holding: !include holding/125.yaml
  500_holding: !include holding/500.yaml
  602_holding: !include holding/602.yaml
  603_holding: !include holding/603.yaml
  604_holding: !include holding/604.yaml
  605_holding: !include holding/605.yaml
  1000_holding: !include holding/1000.yaml

number:
  - platform: modbus_controller
    modbus_controller_id: nilan_modbus_controller
    name: "Humidity low vent step"
    id: humidity_low_vent_step
    min_value: 0.0
    max_value: 4.0
    step: 1.0
    address: 1910
    force_new_range: true
    use_write_multiple: true
    
  - platform: modbus_controller
    modbus_controller_id: nilan_modbus_controller
    name: "Humidity high vent step"
    id: humidity_high_vent_step
    min_value: 0.0
    max_value: 4.0
    step: 1.0
    address: 1911
    force_new_range: true
    use_write_multiple: true 

  - platform: modbus_controller
    modbus_controller_id: nilan_modbus_controller
    name: "Humidity limit low vent"
    id: humidity_limit_low_vent    
    unit_of_measurement: '%'
    icon: "mdi:percent"
    min_value: 15.0
    max_value: 45.0
    step: 1.0
    address: 1912
    force_new_range: true
    use_write_multiple: true
    multiply: 100

  - platform: modbus_controller
    modbus_controller_id: nilan_modbus_controller
    name: "Humidity max time on high ventilation (minutes)"
    id: humidity_max_time_high_vent
    value_type: U_WORD
    unit_of_measurement: minutes
    min_value: 0.0
    max_value: 180.0
    step: 1.0
    address: 1913
    force_new_range: true
    use_write_multiple: true
    icon: mdi:clock-start

  - platform: modbus_controller
    modbus_controller_id: nilan_modbus_controller
    name: "CO2 high vent step"
    id: co2_high_vent_step
    min_value: 0.0
    max_value: 4.0
    step: 1.0
    address: 1920
    force_new_range: true
    use_write_multiple: true

  - platform: modbus_controller
    modbus_controller_id: nilan_modbus_controller
    name: "CO2 limit normal ventilation"
    id: co2_limit_normal_ventilation
    min_value: 400
    max_value: 750
    step: 1.0
    address: 1921
    force_new_range: true
    use_write_multiple: true
    mode: slider

  - platform: modbus_controller
    modbus_controller_id: nilan_modbus_controller
    name: "CO2 limit high ventilation"
    id: co2_limit_high_ventilation
    min_value: 650
    max_value: 800
    step: 1.0
    address: 1922
    force_new_range: true
    use_write_multiple: true

text_sensor:
  - platform: template
    name: "Air Quality Index CO2 (AQI)"
    id: aqi_co2
    icon: mdi:air-filter    
  - platform: template
    name: "Alarm 1 timestamp"
    id: nilan_alarm_list_1_datetime
    lambda: |-
      uint16_t alarmDate = id(nilan_alarm_list_1_date).state;
      uint16_t alarmTime = id(nilan_alarm_list_1_time).state;
      
      if(!alarmDate ||!alarmTime) return std::string("");
      
      // Parse the date
      auto year = (alarmDate >> 9) + 1980;
      auto month = (alarmDate >> 5) & 0b00001111;
      auto day = alarmDate & 0b00011111;
      auto hour = (alarmTime >> 11) & 0b00011111;
      auto minute = (alarmTime >> 5) & 0b0011111;
      auto second = (alarmTime & 0b00011111) * 2;
      
      return std::to_string(year) + "-" +
        ((month < 10) ? "0" : "") + std::to_string(month) + "-" + 
        ((day < 10) ? "0" : "") + std::to_string(day) + " " +
        ((hour < 10) ? "0" : "") + std::to_string(hour) + ":" +
        ((minute < 10) ? "0" : "") + std::to_string(minute) + ":" +
        ((second < 10) ? "0" : "") + std::to_string(second);
  - platform: template
    name: "Alarm 2 timestamp"
    id: nilan_alarm_list_2_datetime
    lambda: |-
      uint16_t alarmDate = id(nilan_alarm_list_2_date).state;
      uint16_t alarmTime = id(nilan_alarm_list_2_time).state;
      
      if(!alarmDate ||!alarmTime) return std::string("");
      
      // Parse the date
      auto year = (alarmDate >> 9) + 1980;
      auto month = (alarmDate >> 5) & 0b00001111;
      auto day = alarmDate & 0b00011111;
      auto hour = (alarmTime >> 11) & 0b00011111;
      auto minute = (alarmTime >> 5) & 0b0011111;
      auto second = (alarmTime & 0b00011111) * 2;
      
      return std::to_string(year) + "-" +
        ((month < 10) ? "0" : "") + std::to_string(month) + "-" + 
        ((day < 10) ? "0" : "") + std::to_string(day) + " " +
        ((hour < 10) ? "0" : "") + std::to_string(hour) + ":" +
        ((minute < 10) ? "0" : "") + std::to_string(minute) + ":" +
        ((second < 10) ? "0" : "") + std::to_string(second);
  - platform: template
    name: "Alarm 3 timestamp"
    id: nilan_alarm_list_3_datetime
    lambda: |-
      uint16_t alarmDate = id(nilan_alarm_list_3_date).state;
      uint16_t alarmTime = id(nilan_alarm_list_3_time).state;
      
      if(!alarmDate ||!alarmTime) return std::string("");
      
      // Parse the date
      auto year = (alarmDate >> 9) + 1980;
      auto month = (alarmDate >> 5) & 0b00001111;
      auto day = alarmDate & 0b00011111;
      auto hour = (alarmTime >> 11) & 0b00011111;
      auto minute = (alarmTime >> 5) & 0b0011111;
      auto second = (alarmTime & 0b00011111) * 2;
      
      return std::to_string(year) + "-" +
        ((month < 10) ? "0" : "") + std::to_string(month) + "-" + 
        ((day < 10) ? "0" : "") + std::to_string(day) + " " +
        ((hour < 10) ? "0" : "") + std::to_string(hour) + ":" +
        ((minute < 10) ? "0" : "") + std::to_string(minute) + ":" +
        ((second < 10) ? "0" : "") + std::to_string(second);





switch:
  - platform: modbus_controller
    modbus_controller_id: nilan_modbus_controller
    name: "On/Off state"
    id: nilan_on_off_state
    register_type: holding
    bitmask: 1
    force_new_range: true
    use_write_multiple: true
    address: 1001
